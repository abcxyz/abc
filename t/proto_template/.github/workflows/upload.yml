name: 'upload'

on:
  push:
    branches:
      - 'main'

permissions:
  contents: 'read'
  id-token: 'write'

concurrency:
  group: 'upload-${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: false

env:
  PROTOBUF_VERSION: 'REPLACE_PROTOBUF_VERSION'
  PROTOC_GEN_GO_VERSION: 'REPLACE_PROTOC_GEN_GO_VERSION'
  BUF_VERSION: 'REPLACE_BUF_VERSION'
  BUF_CHECKSUM: 'REPLACE_BUF_CHECKSUM'

  PROJECT_ID: 'REPLACE_PROJECT_ID'
  WIF_PROVIDER: 'REPLACE_WIF_PROVIDER'
  WIF_SERVICE_ACCOUNT: 'REPLACE_WIF_SERVICE_ACCOUNT'

  GO_VERSION: 'REPLACE_GO_VERSION'
  GO_GAR_REPOSITORY_NAME: 'REPLACE_GO_GAR_REPOSITORY_NAME'
  GO_GAR_REPOSITORY_LOCATION: 'REPLACE_GO_GAR_REPOSITORY_LOCATION'
  GO_MODULE_PATH: 'REPLACE_GO_MODULE_PATH'

  NODE_VERSION: 'REPLACE_NODE_VERSION'
  NODE_GAR_REPOSITORY_NAME: 'REPLACE_NODE_GAR_REPOSITORY_NAME'
  NODE_GAR_REPOSITORY_LOCATION: 'REPLACE_NODE_GAR_REPOSITORY_LOCATION'

jobs:
  ci:
    uses: './.github/workflows/ci.yml'
    permissions:
      contents: 'read'
      id-token: 'write'

  create_artifacts:
    needs:
      - 'ci'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - name: 'Setup Go'
        uses: 'actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe' # ratchet:actions/setup-go@v4
        with:
          go-version: '${{ env.GO_VERSION }}'

      - name: 'Setup Buf CLI'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@main' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/bufbuild/buf/releases/download/v${{ env.BUF_VERSION }}/buf-Linux-x86_64.tar.gz'
          install_path: '${{ runner.temp }}/.buf'
          binary_subpath: 'buf/bin/buf'
          checksum: '${{ env.BUF_CHECKSUM }}'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_buf_${{ env.BUF_VERSION }}'
          add_to_path: true

      - name: 'Install protobuf'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@main' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/protocolbuffers/protobuf/releases/download/v${{ env.PROTOBUF_VERSION }}/protoc-${{ env.PROTOBUF_VERSION }}-linux-x86_64.zip'
          install_path: '${{ runner.temp }}/.protoc'
          binary_subpath: '.'
          checksum: 'fc793561283d9ea6813fb757ae54f1afea6770afcd930904bdf3e590910420aa'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_protoc_${{ env.PROTOBUF_VERSION }}'
          add_to_path: true

      - name: 'Install protoc-gen-go'
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v${{ env.PROTOC_GEN_GO_VERSION }}

      - name: 'Run Generate'
        env:
          PROTO_VERSION: '${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
        shell: 'bash'
        run: |
          set +e
          make generate
          DIFF=$(git status --porcelain)
          echo $DIFF
          if [[ -z "${DIFF}" ]]; then
            echo "::error::Expected a diff but did not find one, proto version must be in semver format."
            exit 1
          fi

      - name: 'Upload Go GitHub Artifact'
        uses: 'actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3' # ratchet:actions/upload-artifact@v4
        with:
          name: 'go-${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
          path: './gen/go'
          if-no-files-found: 'error'
          retention-days: 3

      - name: 'Upload Node GitHub Artifact'
        uses: 'actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3' # ratchet:actions/upload-artifact@v4
        with:
          name: 'node-${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
          path: './gen/node'
          if-no-files-found: 'error'
          retention-days: 3

  deploy_go:
    needs:
      - 'ci'
      - 'create_artifacts'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@3a3c4c57d294ef65efaaee4ff17b22fa88dd3c69' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ env.WIF_PROVIDER }}'
          service_account: '${{ env.WIF_SERVICE_ACCOUNT }}'
          token_format: 'access_token'

      - name: 'Setup gcloud'
        uses: 'google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200' # ratchet:google-github-actions/setup-gcloud@v2
        with:
          install_components: 'package-go-module'

      - name: 'Setup Go'
        uses: 'actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe' # ratchet:actions/setup-go@v4
        with:
          go-version: '${{ env.GO_VERSION }}'

      - name: 'Download go artifact'
        uses: 'actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe' # ratchet:actions/download-artifact@v4
        with:
          pattern: 'go-${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
          merge-multiple: true

      - name: 'Upload to go GAR'
        env:
          # version must be prefixed with vX.Y.Z https://cloud.google.com/artifact-registry/docs/go/store-go#package_and_upload_your_module
          # the sha suffix is easily associate a commit with a version.
          VERSION: 'v${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
          GO_GEN_PROTOS_DIRECTORY: '.'
        run: |-
          gcloud artifacts go upload \
          --module-path=${{ env.GO_MODULE_PATH }} \
          --project=${{ env.PROJECT_ID }} \
          --location=${{ env.GO_GAR_REPOSITORY_LOCATION }} \
          --repository=${{ env.GO_GAR_REPOSITORY_NAME }} \
          --source=$GO_GEN_PROTOS_DIRECTORY \
          --version=$VERSION

  deploy_npm:
    needs:
      - 'ci'
      - 'create_artifacts'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@3a3c4c57d294ef65efaaee4ff17b22fa88dd3c69' # ratchet:google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ env.WIF_PROVIDER }}'
          service_account: '${{ env.WIF_SERVICE_ACCOUNT }}'
          token_format: 'access_token'

      - name: 'Download node artifact'
        uses: 'actions/download-artifact@eaceaf801fd36c7dee90939fad912460b18a1ffe' # ratchet:actions/download-artifact@v4
        with:
          pattern: 'node-${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
          merge-multiple: true

      - name: 'Setup node'
        uses: 'actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8' # ratchet:actions/setup-node@v4
        with:
          node-version: '${{ env.NODE_VERSION }}'

      - name: 'Upload to Node GAR'
        env:
          VERSION: 'v${{ needs.ci.outputs.proto_version }}-${{ github.sha }}'
        run: |-
          npm run artifactregistry-login
          npm publish
