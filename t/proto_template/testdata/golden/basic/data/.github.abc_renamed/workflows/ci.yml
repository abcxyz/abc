name: 'ci'

on:
  workflow_call:
  pull_request:
    branches:
      - 'main'

permissions:
  contents: 'read'
  id-token: 'write'

concurrency:
  group: 'ci-${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  GO_VERSION: '1.21.1'
  PROTOBUF_VERSION: '24.3'
  PROTOC_GEN_GO_VERSION: '1.31.0'
  BUF_VERSION: '1.28.1'
  BUF_CHECKSUM: '278dd19ef5e6a504bdda16faf1488451'

jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout PR branch'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.head.ref }}'

      - name: 'Setup Buf CLI'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@main' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/bufbuild/buf/releases/download/v${{ env.BUF_VERSION }}/buf-Linux-x86_64.tar.gz'
          install_path: '${{ runner.temp }}/.buf'
          binary_subpath: 'buf/bin/buf'
          checksum: '${{ env.BUF_CHECKSUM }}'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_buf_${{ env.BUF_VERSION }}'
          add_to_path: true

      - name: 'Run Build'
        shell: 'bash'
        run: |
          set +e
          BUILD_CHECK=$(buf build)
          if ! [[ -z "${BUILD_CHECK}" ]]; then
            echo "::error::$BUILD_CHECK"
            exit 1
          fi

  lint:
    runs-on: 'ubuntu-latest'
    needs: 'build'
    steps:
      - name: 'Checkout PR branch'
        uses: 'actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11' # ratchet:actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.head.ref }}'

      - name: 'Setup Buf CLI'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@main' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/bufbuild/buf/releases/download/v${{ env.BUF_VERSION }}/buf-Linux-x86_64.tar.gz'
          install_path: '${{ runner.temp }}/.buf'
          binary_subpath: 'buf/bin/buf'
          checksum: '${{ env.BUF_CHECKSUM }}'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_buf_${{ env.BUF_VERSION }}'
          add_to_path: true

      - name: 'Run Lint'
        shell: 'bash'
        run: |
          set +e
          LINT_CHECK=$(buf lint)
          if ! [[ -z "${LINT_CHECK}" ]]; then
            echo "::error::$LINT_CHECK"
            exit 1
          fi

  regenerate:
    runs-on: 'ubuntu-latest'
    needs: 'build'
    steps:
      - name: 'Checkout PR branch'
        uses: 'actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744' # ratchet:actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.head.ref }}'

      - name: 'Setup Go'
        uses: 'actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe' # ratchet:actions/setup-go@v4
        with:
          go-version: '${{ env.GO_VERSION }}'

      - name: 'Setup Buf CLI'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@main' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/bufbuild/buf/releases/download/v${{ env.BUF_VERSION }}/buf-Linux-x86_64.tar.gz'
          install_path: '${{ runner.temp }}/.buf'
          binary_subpath: 'buf/bin/buf'
          checksum: '${{ env.BUF_CHECKSUM }}'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_buf_${{ env.BUF_VERSION }}'
          add_to_path: true

      - name: 'Install protobuf'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@main' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/protocolbuffers/protobuf/releases/download/v${{ env.PROTOBUF_VERSION }}/protoc-${{ env.PROTOBUF_VERSION }}-linux-x86_64.zip'
          install_path: '${{ runner.temp }}/.protoc'
          binary_subpath: '.'
          checksum: 'fc793561283d9ea6813fb757ae54f1afea6770afcd930904bdf3e590910420aa'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_protoc_${{ env.PROTOBUF_VERSION }}'
          add_to_path: true

      - name: 'Install protoc-gen-go'
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v${{ env.PROTOC_GEN_GO_VERSION }}

      - name: 'Run Generate'
        shell: 'bash'
        run: |
          set +e
          make generate
          DIFF=$(git status --porcelain)
          echo $DIFF
          if ! [[ -z "${DIFF}" ]]; then
            echo "::error::Files were not generated from latest proto changes, run make generate and push the latest changes."
            exit 1
          fi

  breaking:
    runs-on: 'ubuntu-latest'
    needs: 'build'
    steps:
      - name: 'Checkout PR branch'
        uses: 'actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744' # ratchet:actions/checkout@v3
        with:
          ref: '${{ github.event.pull_request.head.ref }}'

      - name: 'Setup Buf CLI'
        uses: 'abcxyz/pkg/.github/actions/setup-binary@main' # ratchet:abcxyz/pkg/.github/actions/setup-binary@main
        with:
          download_url: 'https://github.com/bufbuild/buf/releases/download/v${{ env.BUF_VERSION }}/buf-Linux-x86_64.tar.gz'
          install_path: '${{ runner.temp }}/.buf'
          binary_subpath: 'buf/bin/buf'
          checksum: '${{ env.BUF_CHECKSUM }}'
          cache_key: '${{ runner.os }}_${{ runner.arch }}_buf_${{ env.BUF_VERSION }}'
          add_to_path: true

      - name: 'Run Break Check'
        shell: 'bash'
        run: |
          set +e
          BREAK_CHECK=$(buf lint --against https://github.com/my-org/my-repo.git#branch=main,ref=HEAD~1)
          if ! [[ -z "${BREAK_CHECK}" ]]; then
            echo "::error::$BREAK_CHECK"
            exit 1
          fi
